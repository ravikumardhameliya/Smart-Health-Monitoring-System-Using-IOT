import Adafruit_CharLCD as LCD
import time 
from smbus2 import SMBus
from mlx90614 import MLX90614
from pyfirmata import Arduino, util
import max30102
import hrcalc
import requests
from time import sleep
thingspeak_key = '6RIJX3BABINDPV90'


item = None

board = Arduino('/dev/ttyACM0')
util.Iterator(board).start()


lcd_rs        = 18
lcd_en        = 23
lcd_d4        = 12
lcd_d5        = 16
lcd_d6        = 20
lcd_d7        = 21
lcd_backlight = 4

lcd_columns = 16
lcd_lines  = 2


lcd = LCD.Adafruit_CharLCD(lcd_rs, lcd_en, lcd_d4, lcd_d5,
                           lcd_d6, lcd_d7, lcd_columns, lcd_lines,
                           lcd_backlight)

lcd.message('Smart Health\nMonitoring sys.')
time.sleep(1.0)
lcd.clear()

bus = SMBus(1)
sensor = MLX90614(bus, address=0x5A)

celcius = sensor.get_object_1();
faren = (celcius*1.8)+32
ambient = sensor.get_ambient()
limited_ambient = round(ambient, 2)

m = max30102.MAX30102()

hr2 = 0
sp2 = 0

while True:
    red, ir = m.read_sequential()
    
    
    hr,hrb,sp,spb = hrcalc.calc_hr_and_spo2(ir, red)

    print("Hr detected:",hrb,",","Sp detected:",spb)
#    print("sp detected:",spb)  
    if(hrb == True and hr != -999):
        hr2 = int(hr)
#        print("Heart Rate : ",hr2)
    if(spb == True and sp != -999):
        sp2 = int(sp)
        print("Heart Rate : ",hr2,",","SPO2       : ",sp2)

    print("Body Temperature : ",(round(sensor.get_object_1(),2)),",","Ambient Temperature :", (round(sensor.get_ambient(), 2)),u"\N{DEGREE SIGN}C")
    lcd.message("B.T:"+ (str(round(sensor.get_object_1(),1))) + ",A.:" + str(round(sensor.get_ambient(), 1)))
    lcd.clear()
    lcd.message("B.T:"+ (str(round(sensor.get_object_1(),1))) + ",A.:" + str(round(sensor.get_ambient(), 1)))
    lcd.message('\n')
    lcd.message("H.r:"+(str(round(hr2))) +","+"Sp:"+ (str(round(sp2))))
    lcd.message('\n')
    item = sensor.get_object_1()
    if item >= 40:
        board.digital[2].write(True)
        sleep(0.25)
        board.digital[2].write(False)
        board.digital[9].write(True)
        sleep(0.5)
        board.digital[9].write(False)
        board.digital[3].write(False)
    else:
        board.digital[2].write(False)
        board.digital[9].write(False)
        board.digital[3].write(True)
        r = requests.post('https://api.thingspeak.com/update.json', data = {'api_key':thingspeak_key, 'field1':sensor.get_object_1(), 'field2':sensor.get_ambient(), 'field3':hr2, 'field4':sp2})
   
